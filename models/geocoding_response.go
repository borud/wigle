// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GeocodingResponse geocoding response
//
// swagger:model GeocodingResponse
type GeocodingResponse struct {

	// address
	Address map[string]string `json:"address,omitempty"`

	// boundingbox
	Boundingbox []float64 `json:"boundingbox"`

	// display name
	DisplayName string `json:"display_name,omitempty"`

	// importance
	Importance float64 `json:"importance,omitempty"`

	// lat
	Lat float64 `json:"lat,omitempty"`

	// licence
	Licence string `json:"licence,omitempty"`

	// lon
	Lon float64 `json:"lon,omitempty"`

	// osm type
	OsmType string `json:"osm_type,omitempty"`

	// place id
	PlaceID int64 `json:"place_id,omitempty"`
}

// Validate validates this geocoding response
func (m *GeocodingResponse) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this geocoding response based on context it is used
func (m *GeocodingResponse) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *GeocodingResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GeocodingResponse) UnmarshalBinary(b []byte) error {
	var res GeocodingResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
