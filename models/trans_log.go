// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TransLog trans log
//
// swagger:model TransLog
type TransLog struct {

	// bt discovered
	BtDiscovered int64 `json:"btDiscovered,omitempty"`

	// bt discovered gps
	BtDiscoveredGps int64 `json:"btDiscoveredGps,omitempty"`

	// bt total
	BtTotal int64 `json:"btTotal,omitempty"`

	// bt total gps
	BtTotalGps int64 `json:"btTotalGps,omitempty"`

	// bt total locations
	BtTotalLocations int64 `json:"btTotalLocations,omitempty"`

	// discovered
	Discovered int64 `json:"discovered,omitempty"`

	// discovered gps
	DiscoveredGps int64 `json:"discoveredGps,omitempty"`

	// file lines
	FileLines int64 `json:"fileLines,omitempty"`

	// file name
	FileName string `json:"fileName,omitempty"`

	// file size
	FileSize int64 `json:"fileSize,omitempty"`

	// first time
	// Format: date-time
	FirstTime strfmt.DateTime `json:"firstTime,omitempty"`

	// gen discovered
	GenDiscovered int64 `json:"genDiscovered,omitempty"`

	// gen discovered gps
	GenDiscoveredGps int64 `json:"genDiscoveredGps,omitempty"`

	// gen total
	GenTotal int64 `json:"genTotal,omitempty"`

	// gen total gps
	GenTotalGps int64 `json:"genTotalGps,omitempty"`

	// gen total locations
	GenTotalLocations int64 `json:"genTotalLocations,omitempty"`

	// lastupdt
	// Format: date-time
	Lastupdt strfmt.DateTime `json:"lastupdt,omitempty"`

	// percent done
	PercentDone float32 `json:"percentDone,omitempty"`

	// status
	Status string `json:"status,omitempty"`

	// time parsing
	TimeParsing int64 `json:"timeParsing,omitempty"`

	// total
	Total int64 `json:"total,omitempty"`

	// total gps
	TotalGps int64 `json:"totalGps,omitempty"`

	// total locations
	TotalLocations int64 `json:"totalLocations,omitempty"`

	// transid
	Transid string `json:"transid,omitempty"`

	// username
	Username string `json:"username,omitempty"`

	// wait
	Wait int64 `json:"wait,omitempty"`

	// wwwd status
	WwwdStatus string `json:"wwwdStatus,omitempty"`
}

// Validate validates this trans log
func (m *TransLog) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFirstTime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastupdt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TransLog) validateFirstTime(formats strfmt.Registry) error {
	if swag.IsZero(m.FirstTime) { // not required
		return nil
	}

	if err := validate.FormatOf("firstTime", "body", "date-time", m.FirstTime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TransLog) validateLastupdt(formats strfmt.Registry) error {
	if swag.IsZero(m.Lastupdt) { // not required
		return nil
	}

	if err := validate.FormatOf("lastupdt", "body", "date-time", m.Lastupdt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this trans log based on context it is used
func (m *TransLog) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TransLog) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TransLog) UnmarshalBinary(b []byte) error {
	var res TransLog
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
