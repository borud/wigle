// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UserStandings user standings
//
// swagger:model UserStandings
type UserStandings struct {

	// discovered bt
	DiscoveredBt int64 `json:"discoveredBt,omitempty"`

	// discovered bt g p s
	DiscoveredBtGPS int64 `json:"discoveredBtGPS,omitempty"`

	// discovered cell
	DiscoveredCell int64 `json:"discoveredCell,omitempty"`

	// discovered cell g p s
	DiscoveredCellGPS int64 `json:"discoveredCellGPS,omitempty"`

	// discovered wi fi
	DiscoveredWiFi int64 `json:"discoveredWiFi,omitempty"`

	// discovered wi fi g p s
	DiscoveredWiFiGPS int64 `json:"discoveredWiFiGPS,omitempty"`

	// discovered wi fi g p s percent
	DiscoveredWiFiGPSPercent float32 `json:"discoveredWiFiGPSPercent,omitempty"`

	// event month count
	EventMonthCount int64 `json:"eventMonthCount,omitempty"`

	// event prev month count
	EventPrevMonthCount int64 `json:"eventPrevMonthCount,omitempty"`

	// first
	First string `json:"first,omitempty"`

	// last
	Last string `json:"last,omitempty"`

	// month rank
	MonthRank int64 `json:"monthRank,omitempty"`

	// prev month rank
	PrevMonthRank int64 `json:"prevMonthRank,omitempty"`

	// prev rank
	PrevRank int64 `json:"prevRank,omitempty"`

	// rank
	Rank int64 `json:"rank,omitempty"`

	// self
	Self bool `json:"self,omitempty"`

	// total wi fi locations
	TotalWiFiLocations int64 `json:"totalWiFiLocations,omitempty"`

	// user name
	UserName string `json:"userName,omitempty"`
}

// Validate validates this user standings
func (m *UserStandings) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this user standings based on context it is used
func (m *UserStandings) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UserStandings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserStandings) UnmarshalBinary(b []byte) error {
	var res UserStandings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
