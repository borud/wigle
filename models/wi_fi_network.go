// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WiFiNetwork wi fi network
//
// swagger:model WiFiNetwork
type WiFiNetwork struct {

	// bcninterval
	Bcninterval int32 `json:"bcninterval,omitempty"`

	// channel
	Channel int32 `json:"channel,omitempty"`

	// city
	City string `json:"city,omitempty"`

	// comment
	Comment string `json:"comment,omitempty"`

	// country
	Country string `json:"country,omitempty"`

	// dhcp
	Dhcp string `json:"dhcp,omitempty"`

	// encryption
	Encryption string `json:"encryption,omitempty"`

	// firsttime
	// Format: date-time
	Firsttime strfmt.DateTime `json:"firsttime,omitempty"`

	// freenet
	Freenet string `json:"freenet,omitempty"`

	// housenumber
	Housenumber string `json:"housenumber,omitempty"`

	// lasttime
	// Format: date-time
	Lasttime strfmt.DateTime `json:"lasttime,omitempty"`

	// lastupdt
	// Format: date-time
	Lastupdt strfmt.DateTime `json:"lastupdt,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// netid
	Netid string `json:"netid,omitempty"`

	// paynet
	Paynet string `json:"paynet,omitempty"`

	// postalcode
	Postalcode string `json:"postalcode,omitempty"`

	// qos
	Qos int32 `json:"qos,omitempty"`

	// region
	Region string `json:"region,omitempty"`

	// road
	Road string `json:"road,omitempty"`

	// ssid
	Ssid string `json:"ssid,omitempty"`

	// transid
	Transid string `json:"transid,omitempty"`

	// trilat
	Trilat float64 `json:"trilat,omitempty"`

	// trilong
	Trilong float64 `json:"trilong,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// userfound
	Userfound bool `json:"userfound,omitempty"`

	// wep
	Wep string `json:"wep,omitempty"`
}

// Validate validates this wi fi network
func (m *WiFiNetwork) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFirsttime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLasttime(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastupdt(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WiFiNetwork) validateFirsttime(formats strfmt.Registry) error {
	if swag.IsZero(m.Firsttime) { // not required
		return nil
	}

	if err := validate.FormatOf("firsttime", "body", "date-time", m.Firsttime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *WiFiNetwork) validateLasttime(formats strfmt.Registry) error {
	if swag.IsZero(m.Lasttime) { // not required
		return nil
	}

	if err := validate.FormatOf("lasttime", "body", "date-time", m.Lasttime.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *WiFiNetwork) validateLastupdt(formats strfmt.Registry) error {
	if swag.IsZero(m.Lastupdt) { // not required
		return nil
	}

	if err := validate.FormatOf("lastupdt", "body", "date-time", m.Lastupdt.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this wi fi network based on context it is used
func (m *WiFiNetwork) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *WiFiNetwork) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WiFiNetwork) UnmarshalBinary(b []byte) error {
	var res WiFiNetwork
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
