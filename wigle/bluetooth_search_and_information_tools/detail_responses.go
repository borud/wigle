// Code generated by go-swagger; DO NOT EDIT.

package bluetooth_search_and_information_tools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/borud/wigle/models"
)

// DetailReader is a Reader for the Detail structure.
type DetailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DetailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDetailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDetailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDetailUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDetailForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDetailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDetailTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDetailOK creates a DetailOK with default headers values
func NewDetailOK() *DetailOK {
	return &DetailOK{}
}

/*
DetailOK describes a response with status code 200, with default header values.

Request succeeded
*/
type DetailOK struct {
	Payload *models.NetSearchResponse
}

// IsSuccess returns true when this detail o k response has a 2xx status code
func (o *DetailOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this detail o k response has a 3xx status code
func (o *DetailOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail o k response has a 4xx status code
func (o *DetailOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this detail o k response has a 5xx status code
func (o *DetailOK) IsServerError() bool {
	return false
}

// IsCode returns true when this detail o k response a status code equal to that given
func (o *DetailOK) IsCode(code int) bool {
	return code == 200
}

func (o *DetailOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailOK  %+v", 200, o.Payload)
}

func (o *DetailOK) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailOK  %+v", 200, o.Payload)
}

func (o *DetailOK) GetPayload() *models.NetSearchResponse {
	return o.Payload
}

func (o *DetailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetSearchResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDetailBadRequest creates a DetailBadRequest with default headers values
func NewDetailBadRequest() *DetailBadRequest {
	return &DetailBadRequest{}
}

/*
DetailBadRequest describes a response with status code 400, with default header values.

Request body error
*/
type DetailBadRequest struct {
}

// IsSuccess returns true when this detail bad request response has a 2xx status code
func (o *DetailBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detail bad request response has a 3xx status code
func (o *DetailBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail bad request response has a 4xx status code
func (o *DetailBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this detail bad request response has a 5xx status code
func (o *DetailBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this detail bad request response a status code equal to that given
func (o *DetailBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *DetailBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailBadRequest ", 400)
}

func (o *DetailBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailBadRequest ", 400)
}

func (o *DetailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDetailUnauthorized creates a DetailUnauthorized with default headers values
func NewDetailUnauthorized() *DetailUnauthorized {
	return &DetailUnauthorized{}
}

/*
DetailUnauthorized describes a response with status code 401, with default header values.

Not Authorized
*/
type DetailUnauthorized struct {
}

// IsSuccess returns true when this detail unauthorized response has a 2xx status code
func (o *DetailUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detail unauthorized response has a 3xx status code
func (o *DetailUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail unauthorized response has a 4xx status code
func (o *DetailUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this detail unauthorized response has a 5xx status code
func (o *DetailUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this detail unauthorized response a status code equal to that given
func (o *DetailUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *DetailUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailUnauthorized ", 401)
}

func (o *DetailUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailUnauthorized ", 401)
}

func (o *DetailUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDetailForbidden creates a DetailForbidden with default headers values
func NewDetailForbidden() *DetailForbidden {
	return &DetailForbidden{}
}

/*
DetailForbidden describes a response with status code 403, with default header values.

Commercial request made for non-commercial resource
*/
type DetailForbidden struct {
}

// IsSuccess returns true when this detail forbidden response has a 2xx status code
func (o *DetailForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detail forbidden response has a 3xx status code
func (o *DetailForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail forbidden response has a 4xx status code
func (o *DetailForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this detail forbidden response has a 5xx status code
func (o *DetailForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this detail forbidden response a status code equal to that given
func (o *DetailForbidden) IsCode(code int) bool {
	return code == 403
}

func (o *DetailForbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailForbidden ", 403)
}

func (o *DetailForbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailForbidden ", 403)
}

func (o *DetailForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDetailNotFound creates a DetailNotFound with default headers values
func NewDetailNotFound() *DetailNotFound {
	return &DetailNotFound{}
}

/*
DetailNotFound describes a response with status code 404, with default header values.

No network records matching search criteria found
*/
type DetailNotFound struct {
}

// IsSuccess returns true when this detail not found response has a 2xx status code
func (o *DetailNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detail not found response has a 3xx status code
func (o *DetailNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail not found response has a 4xx status code
func (o *DetailNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this detail not found response has a 5xx status code
func (o *DetailNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this detail not found response a status code equal to that given
func (o *DetailNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *DetailNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailNotFound ", 404)
}

func (o *DetailNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailNotFound ", 404)
}

func (o *DetailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDetailTooManyRequests creates a DetailTooManyRequests with default headers values
func NewDetailTooManyRequests() *DetailTooManyRequests {
	return &DetailTooManyRequests{}
}

/*
DetailTooManyRequests describes a response with status code 429, with default header values.

too many queries today.
*/
type DetailTooManyRequests struct {
}

// IsSuccess returns true when this detail too many requests response has a 2xx status code
func (o *DetailTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detail too many requests response has a 3xx status code
func (o *DetailTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail too many requests response has a 4xx status code
func (o *DetailTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this detail too many requests response has a 5xx status code
func (o *DetailTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this detail too many requests response a status code equal to that given
func (o *DetailTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *DetailTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailTooManyRequests ", 429)
}

func (o *DetailTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/detail][%d] detailTooManyRequests ", 429)
}

func (o *DetailTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
