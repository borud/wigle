// Code generated by go-swagger; DO NOT EDIT.

package bluetooth_search_and_information_tools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/borud/wigle/models"
)

// SearchReader is a Reader for the Search structure.
type SearchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearchUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewSearchPaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSearchTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearchOK creates a SearchOK with default headers values
func NewSearchOK() *SearchOK {
	return &SearchOK{}
}

/*
SearchOK describes a response with status code 200, with default header values.

Request succeeded
*/
type SearchOK struct {
	Payload *models.NetSearchResponse
}

// IsSuccess returns true when this search o k response has a 2xx status code
func (o *SearchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search o k response has a 3xx status code
func (o *SearchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search o k response has a 4xx status code
func (o *SearchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search o k response has a 5xx status code
func (o *SearchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search o k response a status code equal to that given
func (o *SearchOK) IsCode(code int) bool {
	return code == 200
}

func (o *SearchOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/search][%d] searchOK  %+v", 200, o.Payload)
}

func (o *SearchOK) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/search][%d] searchOK  %+v", 200, o.Payload)
}

func (o *SearchOK) GetPayload() *models.NetSearchResponse {
	return o.Payload
}

func (o *SearchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetSearchResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchBadRequest creates a SearchBadRequest with default headers values
func NewSearchBadRequest() *SearchBadRequest {
	return &SearchBadRequest{}
}

/*
SearchBadRequest describes a response with status code 400, with default header values.

Request body error
*/
type SearchBadRequest struct {
}

// IsSuccess returns true when this search bad request response has a 2xx status code
func (o *SearchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search bad request response has a 3xx status code
func (o *SearchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search bad request response has a 4xx status code
func (o *SearchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search bad request response has a 5xx status code
func (o *SearchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search bad request response a status code equal to that given
func (o *SearchBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *SearchBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/search][%d] searchBadRequest ", 400)
}

func (o *SearchBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/search][%d] searchBadRequest ", 400)
}

func (o *SearchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchUnauthorized creates a SearchUnauthorized with default headers values
func NewSearchUnauthorized() *SearchUnauthorized {
	return &SearchUnauthorized{}
}

/*
SearchUnauthorized describes a response with status code 401, with default header values.

Not Authorized
*/
type SearchUnauthorized struct {
}

// IsSuccess returns true when this search unauthorized response has a 2xx status code
func (o *SearchUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search unauthorized response has a 3xx status code
func (o *SearchUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search unauthorized response has a 4xx status code
func (o *SearchUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search unauthorized response has a 5xx status code
func (o *SearchUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search unauthorized response a status code equal to that given
func (o *SearchUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *SearchUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/search][%d] searchUnauthorized ", 401)
}

func (o *SearchUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/search][%d] searchUnauthorized ", 401)
}

func (o *SearchUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchPaymentRequired creates a SearchPaymentRequired with default headers values
func NewSearchPaymentRequired() *SearchPaymentRequired {
	return &SearchPaymentRequired{}
}

/*
SearchPaymentRequired describes a response with status code 402, with default header values.

Insufficient balance for commercial query
*/
type SearchPaymentRequired struct {
}

// IsSuccess returns true when this search payment required response has a 2xx status code
func (o *SearchPaymentRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search payment required response has a 3xx status code
func (o *SearchPaymentRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search payment required response has a 4xx status code
func (o *SearchPaymentRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this search payment required response has a 5xx status code
func (o *SearchPaymentRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this search payment required response a status code equal to that given
func (o *SearchPaymentRequired) IsCode(code int) bool {
	return code == 402
}

func (o *SearchPaymentRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/search][%d] searchPaymentRequired ", 402)
}

func (o *SearchPaymentRequired) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/search][%d] searchPaymentRequired ", 402)
}

func (o *SearchPaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearchTooManyRequests creates a SearchTooManyRequests with default headers values
func NewSearchTooManyRequests() *SearchTooManyRequests {
	return &SearchTooManyRequests{}
}

/*
SearchTooManyRequests describes a response with status code 429, with default header values.

Too many queries today.
*/
type SearchTooManyRequests struct {
}

// IsSuccess returns true when this search too many requests response has a 2xx status code
func (o *SearchTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search too many requests response has a 3xx status code
func (o *SearchTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search too many requests response has a 4xx status code
func (o *SearchTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this search too many requests response has a 5xx status code
func (o *SearchTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this search too many requests response a status code equal to that given
func (o *SearchTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *SearchTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/search][%d] searchTooManyRequests ", 429)
}

func (o *SearchTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/bluetooth/search][%d] searchTooManyRequests ", 429)
}

func (o *SearchTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
