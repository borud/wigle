// Code generated by go-swagger; DO NOT EDIT.

package cell_search_and_information_tools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/borud/wigle/models"
)

// Search1Reader is a Reader for the Search1 structure.
type Search1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *Search1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearch1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearch1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSearch1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 402:
		result := NewSearch1PaymentRequired()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewSearch1TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSearch1OK creates a Search1OK with default headers values
func NewSearch1OK() *Search1OK {
	return &Search1OK{}
}

/*
Search1OK describes a response with status code 200, with default header values.

Request succeeded
*/
type Search1OK struct {
	Payload *models.NetSearchResponse
}

// IsSuccess returns true when this search1 o k response has a 2xx status code
func (o *Search1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search1 o k response has a 3xx status code
func (o *Search1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search1 o k response has a 4xx status code
func (o *Search1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search1 o k response has a 5xx status code
func (o *Search1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this search1 o k response a status code equal to that given
func (o *Search1OK) IsCode(code int) bool {
	return code == 200
}

func (o *Search1OK) Error() string {
	return fmt.Sprintf("[GET /api/v2/cell/search][%d] search1OK  %+v", 200, o.Payload)
}

func (o *Search1OK) String() string {
	return fmt.Sprintf("[GET /api/v2/cell/search][%d] search1OK  %+v", 200, o.Payload)
}

func (o *Search1OK) GetPayload() *models.NetSearchResponse {
	return o.Payload
}

func (o *Search1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetSearchResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearch1BadRequest creates a Search1BadRequest with default headers values
func NewSearch1BadRequest() *Search1BadRequest {
	return &Search1BadRequest{}
}

/*
Search1BadRequest describes a response with status code 400, with default header values.

Request body error
*/
type Search1BadRequest struct {
}

// IsSuccess returns true when this search1 bad request response has a 2xx status code
func (o *Search1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search1 bad request response has a 3xx status code
func (o *Search1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search1 bad request response has a 4xx status code
func (o *Search1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search1 bad request response has a 5xx status code
func (o *Search1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search1 bad request response a status code equal to that given
func (o *Search1BadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *Search1BadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/cell/search][%d] search1BadRequest ", 400)
}

func (o *Search1BadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/cell/search][%d] search1BadRequest ", 400)
}

func (o *Search1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearch1Unauthorized creates a Search1Unauthorized with default headers values
func NewSearch1Unauthorized() *Search1Unauthorized {
	return &Search1Unauthorized{}
}

/*
Search1Unauthorized describes a response with status code 401, with default header values.

Not Authorized
*/
type Search1Unauthorized struct {
}

// IsSuccess returns true when this search1 unauthorized response has a 2xx status code
func (o *Search1Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search1 unauthorized response has a 3xx status code
func (o *Search1Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search1 unauthorized response has a 4xx status code
func (o *Search1Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this search1 unauthorized response has a 5xx status code
func (o *Search1Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this search1 unauthorized response a status code equal to that given
func (o *Search1Unauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *Search1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/cell/search][%d] search1Unauthorized ", 401)
}

func (o *Search1Unauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/cell/search][%d] search1Unauthorized ", 401)
}

func (o *Search1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearch1PaymentRequired creates a Search1PaymentRequired with default headers values
func NewSearch1PaymentRequired() *Search1PaymentRequired {
	return &Search1PaymentRequired{}
}

/*
Search1PaymentRequired describes a response with status code 402, with default header values.

Insufficient balance for commercial query
*/
type Search1PaymentRequired struct {
}

// IsSuccess returns true when this search1 payment required response has a 2xx status code
func (o *Search1PaymentRequired) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search1 payment required response has a 3xx status code
func (o *Search1PaymentRequired) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search1 payment required response has a 4xx status code
func (o *Search1PaymentRequired) IsClientError() bool {
	return true
}

// IsServerError returns true when this search1 payment required response has a 5xx status code
func (o *Search1PaymentRequired) IsServerError() bool {
	return false
}

// IsCode returns true when this search1 payment required response a status code equal to that given
func (o *Search1PaymentRequired) IsCode(code int) bool {
	return code == 402
}

func (o *Search1PaymentRequired) Error() string {
	return fmt.Sprintf("[GET /api/v2/cell/search][%d] search1PaymentRequired ", 402)
}

func (o *Search1PaymentRequired) String() string {
	return fmt.Sprintf("[GET /api/v2/cell/search][%d] search1PaymentRequired ", 402)
}

func (o *Search1PaymentRequired) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSearch1TooManyRequests creates a Search1TooManyRequests with default headers values
func NewSearch1TooManyRequests() *Search1TooManyRequests {
	return &Search1TooManyRequests{}
}

/*
Search1TooManyRequests describes a response with status code 429, with default header values.

Too many queries today.
*/
type Search1TooManyRequests struct {
}

// IsSuccess returns true when this search1 too many requests response has a 2xx status code
func (o *Search1TooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search1 too many requests response has a 3xx status code
func (o *Search1TooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search1 too many requests response has a 4xx status code
func (o *Search1TooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this search1 too many requests response has a 5xx status code
func (o *Search1TooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this search1 too many requests response a status code equal to that given
func (o *Search1TooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *Search1TooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/cell/search][%d] search1TooManyRequests ", 429)
}

func (o *Search1TooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/cell/search][%d] search1TooManyRequests ", 429)
}

func (o *Search1TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
