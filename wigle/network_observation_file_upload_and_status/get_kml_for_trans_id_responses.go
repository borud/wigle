// Code generated by go-swagger; DO NOT EDIT.

package network_observation_file_upload_and_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetKmlForTransIDReader is a Reader for the GetKmlForTransID structure.
type GetKmlForTransIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKmlForTransIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKmlForTransIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetKmlForTransIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetKmlForTransIDOK creates a GetKmlForTransIDOK with default headers values
func NewGetKmlForTransIDOK() *GetKmlForTransIDOK {
	return &GetKmlForTransIDOK{}
}

/*
GetKmlForTransIDOK describes a response with status code 200, with default header values.

Request successful
*/
type GetKmlForTransIDOK struct {
}

// IsSuccess returns true when this get kml for trans Id o k response has a 2xx status code
func (o *GetKmlForTransIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kml for trans Id o k response has a 3xx status code
func (o *GetKmlForTransIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kml for trans Id o k response has a 4xx status code
func (o *GetKmlForTransIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kml for trans Id o k response has a 5xx status code
func (o *GetKmlForTransIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kml for trans Id o k response a status code equal to that given
func (o *GetKmlForTransIDOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetKmlForTransIDOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/file/kml/{transid}][%d] getKmlForTransIdOK ", 200)
}

func (o *GetKmlForTransIDOK) String() string {
	return fmt.Sprintf("[GET /api/v2/file/kml/{transid}][%d] getKmlForTransIdOK ", 200)
}

func (o *GetKmlForTransIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKmlForTransIDUnauthorized creates a GetKmlForTransIDUnauthorized with default headers values
func NewGetKmlForTransIDUnauthorized() *GetKmlForTransIDUnauthorized {
	return &GetKmlForTransIDUnauthorized{}
}

/*
GetKmlForTransIDUnauthorized describes a response with status code 401, with default header values.

User not authenticated
*/
type GetKmlForTransIDUnauthorized struct {
}

// IsSuccess returns true when this get kml for trans Id unauthorized response has a 2xx status code
func (o *GetKmlForTransIDUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kml for trans Id unauthorized response has a 3xx status code
func (o *GetKmlForTransIDUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kml for trans Id unauthorized response has a 4xx status code
func (o *GetKmlForTransIDUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kml for trans Id unauthorized response has a 5xx status code
func (o *GetKmlForTransIDUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get kml for trans Id unauthorized response a status code equal to that given
func (o *GetKmlForTransIDUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GetKmlForTransIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/file/kml/{transid}][%d] getKmlForTransIdUnauthorized ", 401)
}

func (o *GetKmlForTransIDUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/file/kml/{transid}][%d] getKmlForTransIdUnauthorized ", 401)
}

func (o *GetKmlForTransIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
