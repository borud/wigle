// Code generated by go-swagger; DO NOT EDIT.

package network_observation_file_upload_and_status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/borud/wigle/models"
)

// UploadReader is a Reader for the Upload structure.
type UploadReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewUploadInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUploadOK creates a UploadOK with default headers values
func NewUploadOK() *UploadOK {
	return &UploadOK{}
}

/*
UploadOK describes a response with status code 200, with default header values.

Upload successful
*/
type UploadOK struct {
	Payload *models.UploadResultsResponse
}

// IsSuccess returns true when this upload o k response has a 2xx status code
func (o *UploadOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upload o k response has a 3xx status code
func (o *UploadOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload o k response has a 4xx status code
func (o *UploadOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this upload o k response has a 5xx status code
func (o *UploadOK) IsServerError() bool {
	return false
}

// IsCode returns true when this upload o k response a status code equal to that given
func (o *UploadOK) IsCode(code int) bool {
	return code == 200
}

func (o *UploadOK) Error() string {
	return fmt.Sprintf("[POST /api/v2/file/upload][%d] uploadOK  %+v", 200, o.Payload)
}

func (o *UploadOK) String() string {
	return fmt.Sprintf("[POST /api/v2/file/upload][%d] uploadOK  %+v", 200, o.Payload)
}

func (o *UploadOK) GetPayload() *models.UploadResultsResponse {
	return o.Payload
}

func (o *UploadOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UploadResultsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUploadInternalServerError creates a UploadInternalServerError with default headers values
func NewUploadInternalServerError() *UploadInternalServerError {
	return &UploadInternalServerError{}
}

/*
UploadInternalServerError describes a response with status code 500, with default header values.

Unable to process posted file
*/
type UploadInternalServerError struct {
}

// IsSuccess returns true when this upload internal server error response has a 2xx status code
func (o *UploadInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upload internal server error response has a 3xx status code
func (o *UploadInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload internal server error response has a 4xx status code
func (o *UploadInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this upload internal server error response has a 5xx status code
func (o *UploadInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this upload internal server error response a status code equal to that given
func (o *UploadInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *UploadInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v2/file/upload][%d] uploadInternalServerError ", 500)
}

func (o *UploadInternalServerError) String() string {
	return fmt.Sprintf("[POST /api/v2/file/upload][%d] uploadInternalServerError ", 500)
}

func (o *UploadInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
