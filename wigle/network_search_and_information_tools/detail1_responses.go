// Code generated by go-swagger; DO NOT EDIT.

package network_search_and_information_tools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/borud/wigle/models"
)

// Detail1Reader is a Reader for the Detail1 structure.
type Detail1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *Detail1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDetail1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDetail1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDetail1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDetail1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDetail1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDetail1TooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDetail1OK creates a Detail1OK with default headers values
func NewDetail1OK() *Detail1OK {
	return &Detail1OK{}
}

/*
Detail1OK describes a response with status code 200, with default header values.

Request succeeded
*/
type Detail1OK struct {
	Payload *models.WiFiNetworkDetailResponse
}

// IsSuccess returns true when this detail1 o k response has a 2xx status code
func (o *Detail1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this detail1 o k response has a 3xx status code
func (o *Detail1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail1 o k response has a 4xx status code
func (o *Detail1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this detail1 o k response has a 5xx status code
func (o *Detail1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this detail1 o k response a status code equal to that given
func (o *Detail1OK) IsCode(code int) bool {
	return code == 200
}

func (o *Detail1OK) Error() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1OK  %+v", 200, o.Payload)
}

func (o *Detail1OK) String() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1OK  %+v", 200, o.Payload)
}

func (o *Detail1OK) GetPayload() *models.WiFiNetworkDetailResponse {
	return o.Payload
}

func (o *Detail1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WiFiNetworkDetailResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDetail1BadRequest creates a Detail1BadRequest with default headers values
func NewDetail1BadRequest() *Detail1BadRequest {
	return &Detail1BadRequest{}
}

/*
Detail1BadRequest describes a response with status code 400, with default header values.

Request body error
*/
type Detail1BadRequest struct {
}

// IsSuccess returns true when this detail1 bad request response has a 2xx status code
func (o *Detail1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detail1 bad request response has a 3xx status code
func (o *Detail1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail1 bad request response has a 4xx status code
func (o *Detail1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this detail1 bad request response has a 5xx status code
func (o *Detail1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this detail1 bad request response a status code equal to that given
func (o *Detail1BadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *Detail1BadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1BadRequest ", 400)
}

func (o *Detail1BadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1BadRequest ", 400)
}

func (o *Detail1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDetail1Unauthorized creates a Detail1Unauthorized with default headers values
func NewDetail1Unauthorized() *Detail1Unauthorized {
	return &Detail1Unauthorized{}
}

/*
Detail1Unauthorized describes a response with status code 401, with default header values.

Not authenticated
*/
type Detail1Unauthorized struct {
}

// IsSuccess returns true when this detail1 unauthorized response has a 2xx status code
func (o *Detail1Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detail1 unauthorized response has a 3xx status code
func (o *Detail1Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail1 unauthorized response has a 4xx status code
func (o *Detail1Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this detail1 unauthorized response has a 5xx status code
func (o *Detail1Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this detail1 unauthorized response a status code equal to that given
func (o *Detail1Unauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *Detail1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1Unauthorized ", 401)
}

func (o *Detail1Unauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1Unauthorized ", 401)
}

func (o *Detail1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDetail1Forbidden creates a Detail1Forbidden with default headers values
func NewDetail1Forbidden() *Detail1Forbidden {
	return &Detail1Forbidden{}
}

/*
Detail1Forbidden describes a response with status code 403, with default header values.

Commercial request made for non-commercial resource
*/
type Detail1Forbidden struct {
}

// IsSuccess returns true when this detail1 forbidden response has a 2xx status code
func (o *Detail1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detail1 forbidden response has a 3xx status code
func (o *Detail1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail1 forbidden response has a 4xx status code
func (o *Detail1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this detail1 forbidden response has a 5xx status code
func (o *Detail1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this detail1 forbidden response a status code equal to that given
func (o *Detail1Forbidden) IsCode(code int) bool {
	return code == 403
}

func (o *Detail1Forbidden) Error() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1Forbidden ", 403)
}

func (o *Detail1Forbidden) String() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1Forbidden ", 403)
}

func (o *Detail1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDetail1NotFound creates a Detail1NotFound with default headers values
func NewDetail1NotFound() *Detail1NotFound {
	return &Detail1NotFound{}
}

/*
Detail1NotFound describes a response with status code 404, with default header values.

No network records matching search criteria found
*/
type Detail1NotFound struct {
}

// IsSuccess returns true when this detail1 not found response has a 2xx status code
func (o *Detail1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detail1 not found response has a 3xx status code
func (o *Detail1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail1 not found response has a 4xx status code
func (o *Detail1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this detail1 not found response has a 5xx status code
func (o *Detail1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this detail1 not found response a status code equal to that given
func (o *Detail1NotFound) IsCode(code int) bool {
	return code == 404
}

func (o *Detail1NotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1NotFound ", 404)
}

func (o *Detail1NotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1NotFound ", 404)
}

func (o *Detail1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDetail1TooManyRequests creates a Detail1TooManyRequests with default headers values
func NewDetail1TooManyRequests() *Detail1TooManyRequests {
	return &Detail1TooManyRequests{}
}

/*
Detail1TooManyRequests describes a response with status code 429, with default header values.

too many queries today.
*/
type Detail1TooManyRequests struct {
}

// IsSuccess returns true when this detail1 too many requests response has a 2xx status code
func (o *Detail1TooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this detail1 too many requests response has a 3xx status code
func (o *Detail1TooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this detail1 too many requests response has a 4xx status code
func (o *Detail1TooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this detail1 too many requests response has a 5xx status code
func (o *Detail1TooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this detail1 too many requests response a status code equal to that given
func (o *Detail1TooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *Detail1TooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1TooManyRequests ", 429)
}

func (o *Detail1TooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/network/detail][%d] detail1TooManyRequests ", 429)
}

func (o *Detail1TooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
