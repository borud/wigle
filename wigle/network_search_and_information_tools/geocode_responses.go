// Code generated by go-swagger; DO NOT EDIT.

package network_search_and_information_tools

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/borud/wigle/models"
)

// GeocodeReader is a Reader for the Geocode structure.
type GeocodeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GeocodeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGeocodeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGeocodeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGeocodeUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGeocodeTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGeocodeOK creates a GeocodeOK with default headers values
func NewGeocodeOK() *GeocodeOK {
	return &GeocodeOK{}
}

/*
GeocodeOK describes a response with status code 200, with default header values.

Request succeeded
*/
type GeocodeOK struct {
	Payload *models.NetworkGeocodingResponse
}

// IsSuccess returns true when this geocode o k response has a 2xx status code
func (o *GeocodeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this geocode o k response has a 3xx status code
func (o *GeocodeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this geocode o k response has a 4xx status code
func (o *GeocodeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this geocode o k response has a 5xx status code
func (o *GeocodeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this geocode o k response a status code equal to that given
func (o *GeocodeOK) IsCode(code int) bool {
	return code == 200
}

func (o *GeocodeOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/network/geocode][%d] geocodeOK  %+v", 200, o.Payload)
}

func (o *GeocodeOK) String() string {
	return fmt.Sprintf("[GET /api/v2/network/geocode][%d] geocodeOK  %+v", 200, o.Payload)
}

func (o *GeocodeOK) GetPayload() *models.NetworkGeocodingResponse {
	return o.Payload
}

func (o *GeocodeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NetworkGeocodingResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGeocodeBadRequest creates a GeocodeBadRequest with default headers values
func NewGeocodeBadRequest() *GeocodeBadRequest {
	return &GeocodeBadRequest{}
}

/*
GeocodeBadRequest describes a response with status code 400, with default header values.

Request error
*/
type GeocodeBadRequest struct {
}

// IsSuccess returns true when this geocode bad request response has a 2xx status code
func (o *GeocodeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this geocode bad request response has a 3xx status code
func (o *GeocodeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this geocode bad request response has a 4xx status code
func (o *GeocodeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this geocode bad request response has a 5xx status code
func (o *GeocodeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this geocode bad request response a status code equal to that given
func (o *GeocodeBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GeocodeBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v2/network/geocode][%d] geocodeBadRequest ", 400)
}

func (o *GeocodeBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v2/network/geocode][%d] geocodeBadRequest ", 400)
}

func (o *GeocodeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGeocodeUnauthorized creates a GeocodeUnauthorized with default headers values
func NewGeocodeUnauthorized() *GeocodeUnauthorized {
	return &GeocodeUnauthorized{}
}

/*
GeocodeUnauthorized describes a response with status code 401, with default header values.

Not authenticated
*/
type GeocodeUnauthorized struct {
}

// IsSuccess returns true when this geocode unauthorized response has a 2xx status code
func (o *GeocodeUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this geocode unauthorized response has a 3xx status code
func (o *GeocodeUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this geocode unauthorized response has a 4xx status code
func (o *GeocodeUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this geocode unauthorized response has a 5xx status code
func (o *GeocodeUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this geocode unauthorized response a status code equal to that given
func (o *GeocodeUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *GeocodeUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/network/geocode][%d] geocodeUnauthorized ", 401)
}

func (o *GeocodeUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/network/geocode][%d] geocodeUnauthorized ", 401)
}

func (o *GeocodeUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGeocodeTooManyRequests creates a GeocodeTooManyRequests with default headers values
func NewGeocodeTooManyRequests() *GeocodeTooManyRequests {
	return &GeocodeTooManyRequests{}
}

/*
GeocodeTooManyRequests describes a response with status code 429, with default header values.

too many queries today.
*/
type GeocodeTooManyRequests struct {
}

// IsSuccess returns true when this geocode too many requests response has a 2xx status code
func (o *GeocodeTooManyRequests) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this geocode too many requests response has a 3xx status code
func (o *GeocodeTooManyRequests) IsRedirect() bool {
	return false
}

// IsClientError returns true when this geocode too many requests response has a 4xx status code
func (o *GeocodeTooManyRequests) IsClientError() bool {
	return true
}

// IsServerError returns true when this geocode too many requests response has a 5xx status code
func (o *GeocodeTooManyRequests) IsServerError() bool {
	return false
}

// IsCode returns true when this geocode too many requests response a status code equal to that given
func (o *GeocodeTooManyRequests) IsCode(code int) bool {
	return code == 429
}

func (o *GeocodeTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /api/v2/network/geocode][%d] geocodeTooManyRequests ", 429)
}

func (o *GeocodeTooManyRequests) String() string {
	return fmt.Sprintf("[GET /api/v2/network/geocode][%d] geocodeTooManyRequests ", 429)
}

func (o *GeocodeTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
