// Code generated by go-swagger; DO NOT EDIT.

package statistics_and_information

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/borud/wigle/models"
)

// CountryRegionReader is a Reader for the CountryRegion structure.
type CountryRegionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CountryRegionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCountryRegionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewCountryRegionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCountryRegionOK creates a CountryRegionOK with default headers values
func NewCountryRegionOK() *CountryRegionOK {
	return &CountryRegionOK{}
}

/*
CountryRegionOK describes a response with status code 200, with default header values.

Request succeeded
*/
type CountryRegionOK struct {
	Payload *models.RegionResponse
}

// IsSuccess returns true when this country region o k response has a 2xx status code
func (o *CountryRegionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this country region o k response has a 3xx status code
func (o *CountryRegionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this country region o k response has a 4xx status code
func (o *CountryRegionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this country region o k response has a 5xx status code
func (o *CountryRegionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this country region o k response a status code equal to that given
func (o *CountryRegionOK) IsCode(code int) bool {
	return code == 200
}

func (o *CountryRegionOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/regions][%d] countryRegionOK  %+v", 200, o.Payload)
}

func (o *CountryRegionOK) String() string {
	return fmt.Sprintf("[GET /api/v2/stats/regions][%d] countryRegionOK  %+v", 200, o.Payload)
}

func (o *CountryRegionOK) GetPayload() *models.RegionResponse {
	return o.Payload
}

func (o *CountryRegionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RegionResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCountryRegionInternalServerError creates a CountryRegionInternalServerError with default headers values
func NewCountryRegionInternalServerError() *CountryRegionInternalServerError {
	return &CountryRegionInternalServerError{}
}

/*
CountryRegionInternalServerError describes a response with status code 500, with default header values.

Unable to complete request
*/
type CountryRegionInternalServerError struct {
}

// IsSuccess returns true when this country region internal server error response has a 2xx status code
func (o *CountryRegionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this country region internal server error response has a 3xx status code
func (o *CountryRegionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this country region internal server error response has a 4xx status code
func (o *CountryRegionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this country region internal server error response has a 5xx status code
func (o *CountryRegionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this country region internal server error response a status code equal to that given
func (o *CountryRegionInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *CountryRegionInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/regions][%d] countryRegionInternalServerError ", 500)
}

func (o *CountryRegionInternalServerError) String() string {
	return fmt.Sprintf("[GET /api/v2/stats/regions][%d] countryRegionInternalServerError ", 500)
}

func (o *CountryRegionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
