// Code generated by go-swagger; DO NOT EDIT.

package statistics_and_information

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UserStatisticsReader is a Reader for the UserStatistics structure.
type UserStatisticsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserStatisticsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserStatisticsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUserStatisticsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUserStatisticsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUserStatisticsOK creates a UserStatisticsOK with default headers values
func NewUserStatisticsOK() *UserStatisticsOK {
	return &UserStatisticsOK{}
}

/*
UserStatisticsOK describes a response with status code 200, with default header values.

Corresponding UserStatsResponse for user
*/
type UserStatisticsOK struct {
}

// IsSuccess returns true when this user statistics o k response has a 2xx status code
func (o *UserStatisticsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user statistics o k response has a 3xx status code
func (o *UserStatisticsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user statistics o k response has a 4xx status code
func (o *UserStatisticsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user statistics o k response has a 5xx status code
func (o *UserStatisticsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user statistics o k response a status code equal to that given
func (o *UserStatisticsOK) IsCode(code int) bool {
	return code == 200
}

func (o *UserStatisticsOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/user][%d] userStatisticsOK ", 200)
}

func (o *UserStatisticsOK) String() string {
	return fmt.Sprintf("[GET /api/v2/stats/user][%d] userStatisticsOK ", 200)
}

func (o *UserStatisticsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserStatisticsUnauthorized creates a UserStatisticsUnauthorized with default headers values
func NewUserStatisticsUnauthorized() *UserStatisticsUnauthorized {
	return &UserStatisticsUnauthorized{}
}

/*
UserStatisticsUnauthorized describes a response with status code 401, with default header values.

User not authenticated
*/
type UserStatisticsUnauthorized struct {
}

// IsSuccess returns true when this user statistics unauthorized response has a 2xx status code
func (o *UserStatisticsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user statistics unauthorized response has a 3xx status code
func (o *UserStatisticsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user statistics unauthorized response has a 4xx status code
func (o *UserStatisticsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this user statistics unauthorized response has a 5xx status code
func (o *UserStatisticsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this user statistics unauthorized response a status code equal to that given
func (o *UserStatisticsUnauthorized) IsCode(code int) bool {
	return code == 401
}

func (o *UserStatisticsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/user][%d] userStatisticsUnauthorized ", 401)
}

func (o *UserStatisticsUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/v2/stats/user][%d] userStatisticsUnauthorized ", 401)
}

func (o *UserStatisticsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUserStatisticsNotFound creates a UserStatisticsNotFound with default headers values
func NewUserStatisticsNotFound() *UserStatisticsNotFound {
	return &UserStatisticsNotFound{}
}

/*
UserStatisticsNotFound describes a response with status code 404, with default header values.

No matching user found
*/
type UserStatisticsNotFound struct {
}

// IsSuccess returns true when this user statistics not found response has a 2xx status code
func (o *UserStatisticsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user statistics not found response has a 3xx status code
func (o *UserStatisticsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user statistics not found response has a 4xx status code
func (o *UserStatisticsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this user statistics not found response has a 5xx status code
func (o *UserStatisticsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this user statistics not found response a status code equal to that given
func (o *UserStatisticsNotFound) IsCode(code int) bool {
	return code == 404
}

func (o *UserStatisticsNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/stats/user][%d] userStatisticsNotFound ", 404)
}

func (o *UserStatisticsNotFound) String() string {
	return fmt.Sprintf("[GET /api/v2/stats/user][%d] userStatisticsNotFound ", 404)
}

func (o *UserStatisticsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
