// Code generated by go-swagger; DO NOT EDIT.

package v3_a_l_p_h_a

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCellParams creates a new CellParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCellParams() *CellParams {
	return &CellParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCellParamsWithTimeout creates a new CellParams object
// with the ability to set a timeout on a request.
func NewCellParamsWithTimeout(timeout time.Duration) *CellParams {
	return &CellParams{
		timeout: timeout,
	}
}

// NewCellParamsWithContext creates a new CellParams object
// with the ability to set a context for a request.
func NewCellParamsWithContext(ctx context.Context) *CellParams {
	return &CellParams{
		Context: ctx,
	}
}

// NewCellParamsWithHTTPClient creates a new CellParams object
// with the ability to set a custom HTTPClient for a request.
func NewCellParamsWithHTTPClient(client *http.Client) *CellParams {
	return &CellParams{
		HTTPClient: client,
	}
}

/*
CellParams contains all the parameters to send to the API endpoint

	for the cell operation.

	Typically these are written to a http.Request.
*/
type CellParams struct {

	/* Cid.

	   GSM/LTE/WCDMA/5G NR Cell ID/NCI
	*/
	Cid string

	/* Lac.

	   GSM/LTE/WCDMA/5G NR Location Area Code
	*/
	Lac string

	/* Operator.

	   GSM/LTE/WCDMA/5G NR Operator ID
	*/
	Operator string

	/* Type.

	   Network Type: GSM/LTE/WCDMA/NR
	*/
	Type string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the cell params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CellParams) WithDefaults() *CellParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the cell params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CellParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the cell params
func (o *CellParams) WithTimeout(timeout time.Duration) *CellParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the cell params
func (o *CellParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the cell params
func (o *CellParams) WithContext(ctx context.Context) *CellParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the cell params
func (o *CellParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the cell params
func (o *CellParams) WithHTTPClient(client *http.Client) *CellParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the cell params
func (o *CellParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCid adds the cid to the cell params
func (o *CellParams) WithCid(cid string) *CellParams {
	o.SetCid(cid)
	return o
}

// SetCid adds the cid to the cell params
func (o *CellParams) SetCid(cid string) {
	o.Cid = cid
}

// WithLac adds the lac to the cell params
func (o *CellParams) WithLac(lac string) *CellParams {
	o.SetLac(lac)
	return o
}

// SetLac adds the lac to the cell params
func (o *CellParams) SetLac(lac string) {
	o.Lac = lac
}

// WithOperator adds the operator to the cell params
func (o *CellParams) WithOperator(operator string) *CellParams {
	o.SetOperator(operator)
	return o
}

// SetOperator adds the operator to the cell params
func (o *CellParams) SetOperator(operator string) {
	o.Operator = operator
}

// WithType adds the typeVar to the cell params
func (o *CellParams) WithType(typeVar string) *CellParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the cell params
func (o *CellParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WriteToRequest writes these params to a swagger request
func (o *CellParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cid
	if err := r.SetPathParam("cid", o.Cid); err != nil {
		return err
	}

	// path param lac
	if err := r.SetPathParam("lac", o.Lac); err != nil {
		return err
	}

	// path param operator
	if err := r.SetPathParam("operator", o.Operator); err != nil {
		return err
	}

	// path param type
	if err := r.SetPathParam("type", o.Type); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
